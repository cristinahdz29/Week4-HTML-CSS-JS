//Palindrome app
//will need to create a function
//will hard code an argument because we aren't asking for user input yet


// CREATED A LOOP
// LENGTH GIVE US THE NUMBER OF CHARACTERS, SO IF THE INPUT WORD IS 'MOM', THEN LENGHT IS 3
//RANGE GIVES US THE INDEX, THE LENGHT IS ALWAYS 1 GREATER THAN THE INDEX BECAUSE INDEX ALWAYS STARTS WITH 0, SO WE NEED TO SUBTRACT ONE FROM THE LENGHT TO GET THE RIGHT INDEX,
//SO WE WANT TO ARRANGE THE LETTERS IN REVERSE
// SO WE NEED A FOR LOOP TO LOOP THROUGH THE WORD AND GET THE LETTERS
//TO GET THE LETTERS IN REVERSE, WE WANT THE RANGE TO START AT THE END OF THE STRING(WHICH IS THE LENGHT OF THE STRING - 1 BECAUSE THAT THE MAX NUMBER OF INDEX), THEN WE WANT TO STOP AT THE LAST ITEM(-1)
//AND WE WANT TO DECREASE BY ONE



// FOR JS
//INDEX STARTING POINT IS LENGTH OF THE ARRAY -1 (THIS WILL BE THE LAST ITEM, B/C LENGHT NOT INCLUSIVE)
//INDEX ENDING POINT WILL BE UNTIL ITS <= 0, BECAUSE 0 IS ALWAYS THE FIRST INDEX IN THE ARRAY (TRYING TO LOOP THROUGH IT BACKWARDS)

// AND DECREASING BY 1 EACH TIME, BECAUSE WE WANT THE INDEX TO GO DOWN, BECAUSE WE'RE MOVING THROUGH THE FUNCTION FROM LAST TO FIRST IN REVERSE ORDER
function palindrome(word) {
    let newString = []
    for (let index = word.length -1; index >=0; index --)
    // console.log(word[index])
        //ADDING EACH INDEX TO AN EMPTY ARRAY
        newString.push(word[index])
        // console.log(newString)
        //CONVERTING THAT ARRAY INTO A STRING; WILL BE A STRING WITH THE LETTERS REVERSED
    updatedString = newString.join('')
    // console.log(updated_string)
    //IF ORIGINAL WORD OR STRING IS THE SAME AS ITS REVERSED VERSION, THEN ITS A PALINDROME
    if (word == updatedString) {
        return "This is a palindrome"
    } else {
        return "This is not a palindrome"
    }
    

}

console.log(palindrome("mom"))